{"remainingRequest":"/Users/mlee/Desktop/Projects/FoodGram/node_modules/babel-loader/lib/index.js!/Users/mlee/Desktop/Projects/FoodGram/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/mlee/Desktop/Projects/FoodGram/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mlee/Desktop/Projects/FoodGram/src/components/singlePost.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/mlee/Desktop/Projects/FoodGram/src/components/singlePost.vue","mtime":1597177211717},{"path":"/Users/mlee/Desktop/Projects/FoodGram/node_modules/cache-loader/dist/cjs.js","mtime":1594235898867},{"path":"/Users/mlee/Desktop/Projects/FoodGram/node_modules/babel-loader/lib/index.js","mtime":1594235898778},{"path":"/Users/mlee/Desktop/Projects/FoodGram/node_modules/cache-loader/dist/cjs.js","mtime":1594235898867},{"path":"/Users/mlee/Desktop/Projects/FoodGram/node_modules/vue-loader/lib/index.js","mtime":1594235903509}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KZXhwb3J0IGRlZmF1bHQgewogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBpZDogdGhpcy4kcm91dGUucGFyYW1zLmlkLAogICAgICBwb3N0OiB7fQogICAgfTsKICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgIHRoaXMuJGh0dHAuZ2V0KCdodHRwczovL2pzb25wbGFjZWhvbGRlci50eXBpY29kZS5jb20vcG9zdHMvJyArIHRoaXMuaWQgKyAnLmpzb24nKS50aGVuKGZ1bmN0aW9uIChkYXRhKSB7CiAgICAgIF90aGlzLnBvc3QgPSBkYXRhLmRhdGE7CiAgICB9KTsKICB9Cn07"},{"version":3,"sources":["singlePost.vue"],"names":[],"mappings":";;;;;;;AAQA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,EAAA,EAAA,KAAA,MAAA,CAAA,MAAA,CAAA,EADA;AAEA,MAAA,IAAA,EAAA;AAFA,KAAA;AAIA,GANA;AAOA,EAAA,OAPA,qBAOA;AAAA;;AACA,SAAA,KAAA,CAAA,GAAA,CAAA,gDAAA,KAAA,EAAA,GAAA,OAAA,EAAA,IAAA,CAAA,UAAA,IAAA,EAAA;AACA,MAAA,KAAA,CAAA,IAAA,GAAA,IAAA,CAAA,IAAA;AACA,KAFA;AAGA;AAXA,CAAA","sourcesContent":["<template>\n    <div id = \"single-post\"> \n        <h1> {{ post.title }} </h1>\n        <article> {{ post.body }}</article>\n    </div>\n</template>\n\n<script>\nexport default {\n    data() {\n        return {\n            id: this.$route.params.id,\n            post: {}\n        }\n    },\n    created() {\n        this.$http.get('https://jsonplaceholder.typicode.com/posts/' + this.id + '.json').then(data => {\n            this.post = data.data;\n        });\n    }\n}\n</script>"],"sourceRoot":"src/components"}]}